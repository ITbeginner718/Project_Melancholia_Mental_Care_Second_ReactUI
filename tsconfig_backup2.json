// tsconfig.json

{
    "compilerOptions": {
      /* Language and Environment */
      "target": "es2016" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
  
      /* Modules */
      "module": "commonjs" /* Specify what module code is generated. */,
      "baseUrl": "./src" /* Specify the base directory to resolve non-relative module names. */,
      "paths":{
        "components/*": ["src/components/*"],
      },
      "typeRoots": [
        "./node_modules/@types",
        "./types"
      ] /* Specify multiple folders that act like './node_modules/@types'. */,
      "types": [
        "node"
      ] /* Specify type package names to be included without being referenced in a source file. */,
  
      "moduleDetection": "force",
  
      "jsx": "react-jsx",
  
      /* JavaScript Support */
      "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
  
      /* Emit */
      "noEmit": true /* Disable emitting files from a compilation. */,
  
      /* Interop Constraints */
      "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
      "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
  
      /* Type Checking */
      "strict": true /* Enable all strict type-checking options. */,
      "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
      "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
  
      /* Completeness */
      "skipLibCheck": true /* Skip type checking all .d.ts files. */,
  
      "allowImportingTsExtensions": true,
    },
    "include": ["src", "**/*.tsx"],
    "exclude": ["node_modules", "__test__"],
  }